任务分配阶段 2
个⼈作业
到期的：8星期三 上午 8⼗⽉2025
介绍
在作业阶段 2，你将基于课程后半部分所学内容扩展作业阶段 1 的功能。作业阶段 2 将使
⽤ MongoDB 存储数据，使⽤套接字提供聊天功能，并⽀持图⽚上传和显⽰，以及允许聊
天⽤⼾通过视频进⾏连接。
MongoDB
 Node.js 服务器⽤于存储聊天频道和聊天历史记录的数据将从 JSON ⽂件更改为 
MongoDB 数据库。Node.js 服务器应存储⽤⼾和群组数据。Mongoose 驱动程序不允
许被使⽤。
插座
套接字将⽤于⽀持频道内的聊天通信。⽤⼾登录后，可以从其所在的群组列表中进⾏选
择。然后，他们可以选择在特定频道中进⾏交流。如果聊天中有先前发送的消息，则应
向新⽤⼾显⽰⼀定数量的先前聊天消息。当⽤⼾进⼊频道时，聊天历史记录应随着⽤⼾
发送消息⽽更新。当⽤⼾加⼊和离开频道时，频道也应实时收到通知。
图像⽀持
聊天系统应允许⽤⼾指定个⼈资料图⽚（即头像）。该图⽚应与⽤⼾发布的聊天记录中的
⽤⼾名⼀同显⽰。聊天系统还应⽀持将图⽚作为聊天消息发送，并向所有查看聊天的⽤⼾
显⽰。服务器上的图⽚存储可以作为指定⽬录中的⽂件，⽂件路径存储在 Mongo 数据库
中。
视频⽀持
聊天系统应该允许⽤⼾进⾏视频聊天。为此，可以在 Angular 端和服务器端使⽤更多 
API。例如，可以在 Angular 端使⽤ PeerJS，并在服务器端实现 Peer 服务器。为了演
⽰视频聊天功能，您可以将应⽤上传到 elf 并运⾏。
测试
在服务器端，应该执⾏测试以确保路由功能正常。在 Angular 端，应该执⾏单元测试和
端到端测试。
Git
在开发聊天系统的过程中，必须使⽤ Git。我们建议您使⽤ GitHub 并与您的评分员分
享代码库。我们会根据代码库的频繁更新和 Git 功能的使⽤情况进⾏评分。
⽂档
您需要提供实现⽂档。⽂档应以 README.md ⽂件的形式提供，该⽂件位于您的 
GitHub 仓库根⽬录下。⽂档应使⽤ Markdown 格式正确书写。
您需要提供以下信息：
描述你的 Git 存储库的组织以及你在解决⽅案开发过程中如何使⽤它----
提交
描述客⼾端和服务器中⽤于表⽰各种实体的数据结构，例如：⽤⼾、组、频道
等。
关于如何在客⼾端和服务器之间划分职责的描述（⿎励服务器提供除了静态⽬录之
外还返回 JSON 的 REST API）
路由、参数、返回值和⽤途的列表 Angular 架构：组
件、服务、模型、路由
通过指⽰服务器端的⽂件和全局变量将如何改变以及如何更新每个⻆度组件⻚⾯的
显⽰来描述客⼾端和服务器之间的交互细节。
提交您的 github repo 链接（将其添加到 word ⽂档并提交⽂档）
确保您的研讨会教学团队成员有权查看您的 git repo。
提交您的⽂档副本（⾃述⽂件）
* 请记住不包括你的 github repo 中的 node_modules ⽬录